// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.6.1
// source: proto/2dfortnite.proto

package fortnite

import (
	empty "github.com/golang/protobuf/ptypes/empty"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ActionType int32

const (
	ActionType_PICKUP_ITEM      ActionType = 0
	ActionType_DROP_ITEM        ActionType = 1
	ActionType_DROP_RESOURCE    ActionType = 2
	ActionType_MOVE_PLAYER      ActionType = 3
	ActionType_SHOOT_PROJECTILE ActionType = 4
	ActionType_BUILD_WALL       ActionType = 5
	ActionType_USE_ITEM         ActionType = 6
	ActionType_SWAP_ITEM        ActionType = 7
	ActionType_SELECT_ITEM      ActionType = 8
)

// Enum value maps for ActionType.
var (
	ActionType_name = map[int32]string{
		0: "PICKUP_ITEM",
		1: "DROP_ITEM",
		2: "DROP_RESOURCE",
		3: "MOVE_PLAYER",
		4: "SHOOT_PROJECTILE",
		5: "BUILD_WALL",
		6: "USE_ITEM",
		7: "SWAP_ITEM",
		8: "SELECT_ITEM",
	}
	ActionType_value = map[string]int32{
		"PICKUP_ITEM":      0,
		"DROP_ITEM":        1,
		"DROP_RESOURCE":    2,
		"MOVE_PLAYER":      3,
		"SHOOT_PROJECTILE": 4,
		"BUILD_WALL":       5,
		"USE_ITEM":         6,
		"SWAP_ITEM":        7,
		"SELECT_ITEM":      8,
	}
)

func (x ActionType) Enum() *ActionType {
	p := new(ActionType)
	*p = x
	return p
}

func (x ActionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ActionType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_2dfortnite_proto_enumTypes[0].Descriptor()
}

func (ActionType) Type() protoreflect.EnumType {
	return &file_proto_2dfortnite_proto_enumTypes[0]
}

func (x ActionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ActionType.Descriptor instead.
func (ActionType) EnumDescriptor() ([]byte, []int) {
	return file_proto_2dfortnite_proto_rawDescGZIP(), []int{0}
}

type ItemType int32

const (
	ItemType_NONE       ItemType = 0
	ItemType_MATERIAL   ItemType = 1
	ItemType_CONSUMABLE ItemType = 2
	ItemType_AMMO       ItemType = 3
	ItemType_WEAPON     ItemType = 4
)

// Enum value maps for ItemType.
var (
	ItemType_name = map[int32]string{
		0: "NONE",
		1: "MATERIAL",
		2: "CONSUMABLE",
		3: "AMMO",
		4: "WEAPON",
	}
	ItemType_value = map[string]int32{
		"NONE":       0,
		"MATERIAL":   1,
		"CONSUMABLE": 2,
		"AMMO":       3,
		"WEAPON":     4,
	}
)

func (x ItemType) Enum() *ItemType {
	p := new(ItemType)
	*p = x
	return p
}

func (x ItemType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ItemType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_2dfortnite_proto_enumTypes[1].Descriptor()
}

func (ItemType) Type() protoreflect.EnumType {
	return &file_proto_2dfortnite_proto_enumTypes[1]
}

func (x ItemType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ItemType.Descriptor instead.
func (ItemType) EnumDescriptor() ([]byte, []int) {
	return file_proto_2dfortnite_proto_rawDescGZIP(), []int{1}
}

type Material int32

const (
	Material_WOOD  Material = 0
	Material_BRICK Material = 1
	Material_METAL Material = 2
)

// Enum value maps for Material.
var (
	Material_name = map[int32]string{
		0: "WOOD",
		1: "BRICK",
		2: "METAL",
	}
	Material_value = map[string]int32{
		"WOOD":  0,
		"BRICK": 1,
		"METAL": 2,
	}
)

func (x Material) Enum() *Material {
	p := new(Material)
	*p = x
	return p
}

func (x Material) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Material) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_2dfortnite_proto_enumTypes[2].Descriptor()
}

func (Material) Type() protoreflect.EnumType {
	return &file_proto_2dfortnite_proto_enumTypes[2]
}

func (x Material) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Material.Descriptor instead.
func (Material) EnumDescriptor() ([]byte, []int) {
	return file_proto_2dfortnite_proto_rawDescGZIP(), []int{2}
}

type Consumable int32

const (
	Consumable_BANDAGES            Consumable = 0
	Consumable_MEDKIT              Consumable = 1
	Consumable_SMALL_SHIELD_POTION Consumable = 2
	Consumable_LARGE_SHIELD_POTION Consumable = 3
	Consumable_CHUG_JUG            Consumable = 4
)

// Enum value maps for Consumable.
var (
	Consumable_name = map[int32]string{
		0: "BANDAGES",
		1: "MEDKIT",
		2: "SMALL_SHIELD_POTION",
		3: "LARGE_SHIELD_POTION",
		4: "CHUG_JUG",
	}
	Consumable_value = map[string]int32{
		"BANDAGES":            0,
		"MEDKIT":              1,
		"SMALL_SHIELD_POTION": 2,
		"LARGE_SHIELD_POTION": 3,
		"CHUG_JUG":            4,
	}
)

func (x Consumable) Enum() *Consumable {
	p := new(Consumable)
	*p = x
	return p
}

func (x Consumable) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Consumable) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_2dfortnite_proto_enumTypes[3].Descriptor()
}

func (Consumable) Type() protoreflect.EnumType {
	return &file_proto_2dfortnite_proto_enumTypes[3]
}

func (x Consumable) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Consumable.Descriptor instead.
func (Consumable) EnumDescriptor() ([]byte, []int) {
	return file_proto_2dfortnite_proto_rawDescGZIP(), []int{3}
}

type Ammo int32

const (
	Ammo_SHOTGUN_AMMO       Ammo = 0
	Ammo_ASSAULT_RIFLE_AMMO Ammo = 1
	Ammo_PISTOL_AMMO        Ammo = 3
)

// Enum value maps for Ammo.
var (
	Ammo_name = map[int32]string{
		0: "SHOTGUN_AMMO",
		1: "ASSAULT_RIFLE_AMMO",
		3: "PISTOL_AMMO",
	}
	Ammo_value = map[string]int32{
		"SHOTGUN_AMMO":       0,
		"ASSAULT_RIFLE_AMMO": 1,
		"PISTOL_AMMO":        3,
	}
)

func (x Ammo) Enum() *Ammo {
	p := new(Ammo)
	*p = x
	return p
}

func (x Ammo) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Ammo) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_2dfortnite_proto_enumTypes[4].Descriptor()
}

func (Ammo) Type() protoreflect.EnumType {
	return &file_proto_2dfortnite_proto_enumTypes[4]
}

func (x Ammo) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Ammo.Descriptor instead.
func (Ammo) EnumDescriptor() ([]byte, []int) {
	return file_proto_2dfortnite_proto_rawDescGZIP(), []int{4}
}

type Weapon int32

const (
	Weapon_PUMP_SHOTGUN  Weapon = 0
	Weapon_ASSAULT_RIFLE Weapon = 1
	Weapon_SMG           Weapon = 2
	Weapon_PISTOL        Weapon = 3
)

// Enum value maps for Weapon.
var (
	Weapon_name = map[int32]string{
		0: "PUMP_SHOTGUN",
		1: "ASSAULT_RIFLE",
		2: "SMG",
		3: "PISTOL",
	}
	Weapon_value = map[string]int32{
		"PUMP_SHOTGUN":  0,
		"ASSAULT_RIFLE": 1,
		"SMG":           2,
		"PISTOL":        3,
	}
)

func (x Weapon) Enum() *Weapon {
	p := new(Weapon)
	*p = x
	return p
}

func (x Weapon) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Weapon) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_2dfortnite_proto_enumTypes[5].Descriptor()
}

func (Weapon) Type() protoreflect.EnumType {
	return &file_proto_2dfortnite_proto_enumTypes[5]
}

func (x Weapon) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Weapon.Descriptor instead.
func (Weapon) EnumDescriptor() ([]byte, []int) {
	return file_proto_2dfortnite_proto_rawDescGZIP(), []int{5}
}

type Rarity int32

const (
	Rarity_COMMON    Rarity = 0
	Rarity_UNCOMMON  Rarity = 1
	Rarity_RARE      Rarity = 2
	Rarity_EPIC      Rarity = 3
	Rarity_LEGENDARY Rarity = 4
)

// Enum value maps for Rarity.
var (
	Rarity_name = map[int32]string{
		0: "COMMON",
		1: "UNCOMMON",
		2: "RARE",
		3: "EPIC",
		4: "LEGENDARY",
	}
	Rarity_value = map[string]int32{
		"COMMON":    0,
		"UNCOMMON":  1,
		"RARE":      2,
		"EPIC":      3,
		"LEGENDARY": 4,
	}
)

func (x Rarity) Enum() *Rarity {
	p := new(Rarity)
	*p = x
	return p
}

func (x Rarity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Rarity) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_2dfortnite_proto_enumTypes[6].Descriptor()
}

func (Rarity) Type() protoreflect.EnumType {
	return &file_proto_2dfortnite_proto_enumTypes[6]
}

func (x Rarity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Rarity.Descriptor instead.
func (Rarity) EnumDescriptor() ([]byte, []int) {
	return file_proto_2dfortnite_proto_rawDescGZIP(), []int{6}
}

type WallOrientation int32

const (
	WallOrientation_VERTICAL   WallOrientation = 0
	WallOrientation_HORIZONTAL WallOrientation = 1
)

// Enum value maps for WallOrientation.
var (
	WallOrientation_name = map[int32]string{
		0: "VERTICAL",
		1: "HORIZONTAL",
	}
	WallOrientation_value = map[string]int32{
		"VERTICAL":   0,
		"HORIZONTAL": 1,
	}
)

func (x WallOrientation) Enum() *WallOrientation {
	p := new(WallOrientation)
	*p = x
	return p
}

func (x WallOrientation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WallOrientation) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_2dfortnite_proto_enumTypes[7].Descriptor()
}

func (WallOrientation) Type() protoreflect.EnumType {
	return &file_proto_2dfortnite_proto_enumTypes[7]
}

func (x WallOrientation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WallOrientation.Descriptor instead.
func (WallOrientation) EnumDescriptor() ([]byte, []int) {
	return file_proto_2dfortnite_proto_rawDescGZIP(), []int{7}
}

type PickupItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId uint64 `protobuf:"varint,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
}

func (x *PickupItemRequest) Reset() {
	*x = PickupItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_2dfortnite_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PickupItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PickupItemRequest) ProtoMessage() {}

func (x *PickupItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_2dfortnite_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PickupItemRequest.ProtoReflect.Descriptor instead.
func (*PickupItemRequest) Descriptor() ([]byte, []int) {
	return file_proto_2dfortnite_proto_rawDescGZIP(), []int{0}
}

func (x *PickupItemRequest) GetItemId() uint64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

type DropItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SlotNumber int32 `protobuf:"varint,1,opt,name=slot_number,json=slotNumber,proto3" json:"slot_number,omitempty"`
}

func (x *DropItemRequest) Reset() {
	*x = DropItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_2dfortnite_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DropItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropItemRequest) ProtoMessage() {}

func (x *DropItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_2dfortnite_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropItemRequest.ProtoReflect.Descriptor instead.
func (*DropItemRequest) Descriptor() ([]byte, []int) {
	return file_proto_2dfortnite_proto_rawDescGZIP(), []int{1}
}

func (x *DropItemRequest) GetSlotNumber() int32 {
	if x != nil {
		return x.SlotNumber
	}
	return 0
}

type DropResourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SlotNumber int32 `protobuf:"varint,1,opt,name=slot_number,json=slotNumber,proto3" json:"slot_number,omitempty"`
}

func (x *DropResourceRequest) Reset() {
	*x = DropResourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_2dfortnite_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DropResourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropResourceRequest) ProtoMessage() {}

func (x *DropResourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_2dfortnite_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropResourceRequest.ProtoReflect.Descriptor instead.
func (*DropResourceRequest) Descriptor() ([]byte, []int) {
	return file_proto_2dfortnite_proto_rawDescGZIP(), []int{2}
}

func (x *DropResourceRequest) GetSlotNumber() int32 {
	if x != nil {
		return x.SlotNumber
	}
	return 0
}

type MovePlayerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vx     float64 `protobuf:"fixed64,1,opt,name=vx,proto3" json:"vx,omitempty"`
	Vy     float64 `protobuf:"fixed64,2,opt,name=vy,proto3" json:"vy,omitempty"`
	Facing float64 `protobuf:"fixed64,3,opt,name=facing,proto3" json:"facing,omitempty"`
}

func (x *MovePlayerRequest) Reset() {
	*x = MovePlayerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_2dfortnite_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MovePlayerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovePlayerRequest) ProtoMessage() {}

func (x *MovePlayerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_2dfortnite_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovePlayerRequest.ProtoReflect.Descriptor instead.
func (*MovePlayerRequest) Descriptor() ([]byte, []int) {
	return file_proto_2dfortnite_proto_rawDescGZIP(), []int{3}
}

func (x *MovePlayerRequest) GetVx() float64 {
	if x != nil {
		return x.Vx
	}
	return 0
}

func (x *MovePlayerRequest) GetVy() float64 {
	if x != nil {
		return x.Vy
	}
	return 0
}

func (x *MovePlayerRequest) GetFacing() float64 {
	if x != nil {
		return x.Facing
	}
	return 0
}

type ShootProjectileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Facing float64 `protobuf:"fixed64,1,opt,name=facing,proto3" json:"facing,omitempty"`
}

func (x *ShootProjectileRequest) Reset() {
	*x = ShootProjectileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_2dfortnite_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShootProjectileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShootProjectileRequest) ProtoMessage() {}

func (x *ShootProjectileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_2dfortnite_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShootProjectileRequest.ProtoReflect.Descriptor instead.
func (*ShootProjectileRequest) Descriptor() ([]byte, []int) {
	return file_proto_2dfortnite_proto_rawDescGZIP(), []int{4}
}

func (x *ShootProjectileRequest) GetFacing() float64 {
	if x != nil {
		return x.Facing
	}
	return 0
}

type BuildWallRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X        int64           `protobuf:"varint,1,opt,name=x,proto3" json:"x,omitempty"`
	Y        int64           `protobuf:"varint,2,opt,name=y,proto3" json:"y,omitempty"`
	Facing   WallOrientation `protobuf:"varint,3,opt,name=facing,proto3,enum=fortniteservice.WallOrientation" json:"facing,omitempty"`
	Material Material        `protobuf:"varint,4,opt,name=material,proto3,enum=fortniteservice.Material" json:"material,omitempty"`
}

func (x *BuildWallRequest) Reset() {
	*x = BuildWallRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_2dfortnite_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuildWallRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildWallRequest) ProtoMessage() {}

func (x *BuildWallRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_2dfortnite_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildWallRequest.ProtoReflect.Descriptor instead.
func (*BuildWallRequest) Descriptor() ([]byte, []int) {
	return file_proto_2dfortnite_proto_rawDescGZIP(), []int{5}
}

func (x *BuildWallRequest) GetX() int64 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *BuildWallRequest) GetY() int64 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *BuildWallRequest) GetFacing() WallOrientation {
	if x != nil {
		return x.Facing
	}
	return WallOrientation_VERTICAL
}

func (x *BuildWallRequest) GetMaterial() Material {
	if x != nil {
		return x.Material
	}
	return Material_WOOD
}

type UseItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UseItemRequest) Reset() {
	*x = UseItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_2dfortnite_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UseItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UseItemRequest) ProtoMessage() {}

func (x *UseItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_2dfortnite_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UseItemRequest.ProtoReflect.Descriptor instead.
func (*UseItemRequest) Descriptor() ([]byte, []int) {
	return file_proto_2dfortnite_proto_rawDescGZIP(), []int{6}
}

type SwapItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SlotNumber  int32 `protobuf:"varint,1,opt,name=slot_number,json=slotNumber,proto3" json:"slot_number,omitempty"`
	SlotNumber2 int32 `protobuf:"varint,2,opt,name=slot_number2,json=slotNumber2,proto3" json:"slot_number2,omitempty"`
}

func (x *SwapItemRequest) Reset() {
	*x = SwapItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_2dfortnite_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SwapItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwapItemRequest) ProtoMessage() {}

func (x *SwapItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_2dfortnite_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwapItemRequest.ProtoReflect.Descriptor instead.
func (*SwapItemRequest) Descriptor() ([]byte, []int) {
	return file_proto_2dfortnite_proto_rawDescGZIP(), []int{7}
}

func (x *SwapItemRequest) GetSlotNumber() int32 {
	if x != nil {
		return x.SlotNumber
	}
	return 0
}

func (x *SwapItemRequest) GetSlotNumber2() int32 {
	if x != nil {
		return x.SlotNumber2
	}
	return 0
}

type SelectItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SlotNumber int32 `protobuf:"varint,1,opt,name=slot_number,json=slotNumber,proto3" json:"slot_number,omitempty"`
}

func (x *SelectItemRequest) Reset() {
	*x = SelectItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_2dfortnite_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelectItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectItemRequest) ProtoMessage() {}

func (x *SelectItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_2dfortnite_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectItemRequest.ProtoReflect.Descriptor instead.
func (*SelectItemRequest) Descriptor() ([]byte, []int) {
	return file_proto_2dfortnite_proto_rawDescGZIP(), []int{8}
}

func (x *SelectItemRequest) GetSlotNumber() int32 {
	if x != nil {
		return x.SlotNumber
	}
	return 0
}

type DoActionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionType ActionType `protobuf:"varint,1,opt,name=action_type,json=actionType,proto3,enum=fortniteservice.ActionType" json:"action_type,omitempty"`
	PlayerId   *PlayerId  `protobuf:"bytes,2,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	// Types that are assignable to ActionData:
	//	*DoActionRequest_PickupItem
	//	*DoActionRequest_DropItem
	//	*DoActionRequest_DropResource
	//	*DoActionRequest_MovePlayer
	//	*DoActionRequest_ShootProjectile
	//	*DoActionRequest_BuildWall
	//	*DoActionRequest_UseItem
	//	*DoActionRequest_SwapItem
	//	*DoActionRequest_SelectItem
	ActionData isDoActionRequest_ActionData `protobuf_oneof:"action_data"`
}

func (x *DoActionRequest) Reset() {
	*x = DoActionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_2dfortnite_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DoActionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoActionRequest) ProtoMessage() {}

func (x *DoActionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_2dfortnite_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoActionRequest.ProtoReflect.Descriptor instead.
func (*DoActionRequest) Descriptor() ([]byte, []int) {
	return file_proto_2dfortnite_proto_rawDescGZIP(), []int{9}
}

func (x *DoActionRequest) GetActionType() ActionType {
	if x != nil {
		return x.ActionType
	}
	return ActionType_PICKUP_ITEM
}

func (x *DoActionRequest) GetPlayerId() *PlayerId {
	if x != nil {
		return x.PlayerId
	}
	return nil
}

func (m *DoActionRequest) GetActionData() isDoActionRequest_ActionData {
	if m != nil {
		return m.ActionData
	}
	return nil
}

func (x *DoActionRequest) GetPickupItem() *PickupItemRequest {
	if x, ok := x.GetActionData().(*DoActionRequest_PickupItem); ok {
		return x.PickupItem
	}
	return nil
}

func (x *DoActionRequest) GetDropItem() *DropItemRequest {
	if x, ok := x.GetActionData().(*DoActionRequest_DropItem); ok {
		return x.DropItem
	}
	return nil
}

func (x *DoActionRequest) GetDropResource() *DropResourceRequest {
	if x, ok := x.GetActionData().(*DoActionRequest_DropResource); ok {
		return x.DropResource
	}
	return nil
}

func (x *DoActionRequest) GetMovePlayer() *MovePlayerRequest {
	if x, ok := x.GetActionData().(*DoActionRequest_MovePlayer); ok {
		return x.MovePlayer
	}
	return nil
}

func (x *DoActionRequest) GetShootProjectile() *ShootProjectileRequest {
	if x, ok := x.GetActionData().(*DoActionRequest_ShootProjectile); ok {
		return x.ShootProjectile
	}
	return nil
}

func (x *DoActionRequest) GetBuildWall() *BuildWallRequest {
	if x, ok := x.GetActionData().(*DoActionRequest_BuildWall); ok {
		return x.BuildWall
	}
	return nil
}

func (x *DoActionRequest) GetUseItem() *UseItemRequest {
	if x, ok := x.GetActionData().(*DoActionRequest_UseItem); ok {
		return x.UseItem
	}
	return nil
}

func (x *DoActionRequest) GetSwapItem() *SwapItemRequest {
	if x, ok := x.GetActionData().(*DoActionRequest_SwapItem); ok {
		return x.SwapItem
	}
	return nil
}

func (x *DoActionRequest) GetSelectItem() *SelectItemRequest {
	if x, ok := x.GetActionData().(*DoActionRequest_SelectItem); ok {
		return x.SelectItem
	}
	return nil
}

type isDoActionRequest_ActionData interface {
	isDoActionRequest_ActionData()
}

type DoActionRequest_PickupItem struct {
	PickupItem *PickupItemRequest `protobuf:"bytes,3,opt,name=pickup_item,json=pickupItem,proto3,oneof"`
}

type DoActionRequest_DropItem struct {
	DropItem *DropItemRequest `protobuf:"bytes,4,opt,name=drop_item,json=dropItem,proto3,oneof"`
}

type DoActionRequest_DropResource struct {
	DropResource *DropResourceRequest `protobuf:"bytes,5,opt,name=drop_resource,json=dropResource,proto3,oneof"`
}

type DoActionRequest_MovePlayer struct {
	MovePlayer *MovePlayerRequest `protobuf:"bytes,6,opt,name=move_player,json=movePlayer,proto3,oneof"`
}

type DoActionRequest_ShootProjectile struct {
	ShootProjectile *ShootProjectileRequest `protobuf:"bytes,7,opt,name=shoot_projectile,json=shootProjectile,proto3,oneof"`
}

type DoActionRequest_BuildWall struct {
	BuildWall *BuildWallRequest `protobuf:"bytes,8,opt,name=build_wall,json=buildWall,proto3,oneof"`
}

type DoActionRequest_UseItem struct {
	UseItem *UseItemRequest `protobuf:"bytes,9,opt,name=use_item,json=useItem,proto3,oneof"`
}

type DoActionRequest_SwapItem struct {
	SwapItem *SwapItemRequest `protobuf:"bytes,10,opt,name=swap_item,json=swapItem,proto3,oneof"`
}

type DoActionRequest_SelectItem struct {
	SelectItem *SelectItemRequest `protobuf:"bytes,11,opt,name=select_item,json=selectItem,proto3,oneof"`
}

func (*DoActionRequest_PickupItem) isDoActionRequest_ActionData() {}

func (*DoActionRequest_DropItem) isDoActionRequest_ActionData() {}

func (*DoActionRequest_DropResource) isDoActionRequest_ActionData() {}

func (*DoActionRequest_MovePlayer) isDoActionRequest_ActionData() {}

func (*DoActionRequest_ShootProjectile) isDoActionRequest_ActionData() {}

func (*DoActionRequest_BuildWall) isDoActionRequest_ActionData() {}

func (*DoActionRequest_UseItem) isDoActionRequest_ActionData() {}

func (*DoActionRequest_SwapItem) isDoActionRequest_ActionData() {}

func (*DoActionRequest_SelectItem) isDoActionRequest_ActionData() {}

type RegisterPlayerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Skin uint64 `protobuf:"varint,2,opt,name=skin,proto3" json:"skin,omitempty"`
}

func (x *RegisterPlayerRequest) Reset() {
	*x = RegisterPlayerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_2dfortnite_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterPlayerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterPlayerRequest) ProtoMessage() {}

func (x *RegisterPlayerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_2dfortnite_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterPlayerRequest.ProtoReflect.Descriptor instead.
func (*RegisterPlayerRequest) Descriptor() ([]byte, []int) {
	return file_proto_2dfortnite_proto_rawDescGZIP(), []int{10}
}

func (x *RegisterPlayerRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RegisterPlayerRequest) GetSkin() uint64 {
	if x != nil {
		return x.Skin
	}
	return 0
}

type RegisterPlayerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *RegisterPlayerResponse) Reset() {
	*x = RegisterPlayerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_2dfortnite_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterPlayerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterPlayerResponse) ProtoMessage() {}

func (x *RegisterPlayerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_2dfortnite_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterPlayerResponse.ProtoReflect.Descriptor instead.
func (*RegisterPlayerResponse) Descriptor() ([]byte, []int) {
	return file_proto_2dfortnite_proto_rawDescGZIP(), []int{11}
}

func (x *RegisterPlayerResponse) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type PlayerId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *PlayerId) Reset() {
	*x = PlayerId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_2dfortnite_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerId) ProtoMessage() {}

func (x *PlayerId) ProtoReflect() protoreflect.Message {
	mi := &file_proto_2dfortnite_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerId.ProtoReflect.Descriptor instead.
func (*PlayerId) Descriptor() ([]byte, []int) {
	return file_proto_2dfortnite_proto_rawDescGZIP(), []int{12}
}

func (x *PlayerId) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type WorldItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       uint64           `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Pos      *NetworkPosition `protobuf:"bytes,2,opt,name=pos,proto3" json:"pos,omitempty"` // velocity is probably always 0
	ItemType ItemType         `protobuf:"varint,3,opt,name=item_type,json=itemType,proto3,enum=fortniteservice.ItemType" json:"item_type,omitempty"`
	// Types that are assignable to ItemData:
	//	*WorldItem_Material
	//	*WorldItem_Consumable
	//	*WorldItem_Ammo
	//	*WorldItem_Weapon
	ItemData   isWorldItem_ItemData `protobuf_oneof:"item_data"`
	ItemRarity Rarity               `protobuf:"varint,8,opt,name=item_rarity,json=itemRarity,proto3,enum=fortniteservice.Rarity" json:"item_rarity,omitempty"`
	StackSize  uint32               `protobuf:"varint,9,opt,name=stack_size,json=stackSize,proto3" json:"stack_size,omitempty"` // weapon stack size is number of ammo in mag
}

func (x *WorldItem) Reset() {
	*x = WorldItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_2dfortnite_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorldItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorldItem) ProtoMessage() {}

func (x *WorldItem) ProtoReflect() protoreflect.Message {
	mi := &file_proto_2dfortnite_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorldItem.ProtoReflect.Descriptor instead.
func (*WorldItem) Descriptor() ([]byte, []int) {
	return file_proto_2dfortnite_proto_rawDescGZIP(), []int{13}
}

func (x *WorldItem) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *WorldItem) GetPos() *NetworkPosition {
	if x != nil {
		return x.Pos
	}
	return nil
}

func (x *WorldItem) GetItemType() ItemType {
	if x != nil {
		return x.ItemType
	}
	return ItemType_NONE
}

func (m *WorldItem) GetItemData() isWorldItem_ItemData {
	if m != nil {
		return m.ItemData
	}
	return nil
}

func (x *WorldItem) GetMaterial() Material {
	if x, ok := x.GetItemData().(*WorldItem_Material); ok {
		return x.Material
	}
	return Material_WOOD
}

func (x *WorldItem) GetConsumable() Consumable {
	if x, ok := x.GetItemData().(*WorldItem_Consumable); ok {
		return x.Consumable
	}
	return Consumable_BANDAGES
}

func (x *WorldItem) GetAmmo() Ammo {
	if x, ok := x.GetItemData().(*WorldItem_Ammo); ok {
		return x.Ammo
	}
	return Ammo_SHOTGUN_AMMO
}

func (x *WorldItem) GetWeapon() Weapon {
	if x, ok := x.GetItemData().(*WorldItem_Weapon); ok {
		return x.Weapon
	}
	return Weapon_PUMP_SHOTGUN
}

func (x *WorldItem) GetItemRarity() Rarity {
	if x != nil {
		return x.ItemRarity
	}
	return Rarity_COMMON
}

func (x *WorldItem) GetStackSize() uint32 {
	if x != nil {
		return x.StackSize
	}
	return 0
}

type isWorldItem_ItemData interface {
	isWorldItem_ItemData()
}

type WorldItem_Material struct {
	Material Material `protobuf:"varint,4,opt,name=material,proto3,enum=fortniteservice.Material,oneof"`
}

type WorldItem_Consumable struct {
	Consumable Consumable `protobuf:"varint,5,opt,name=consumable,proto3,enum=fortniteservice.Consumable,oneof"`
}

type WorldItem_Ammo struct {
	Ammo Ammo `protobuf:"varint,6,opt,name=ammo,proto3,enum=fortniteservice.Ammo,oneof"`
}

type WorldItem_Weapon struct {
	Weapon Weapon `protobuf:"varint,7,opt,name=weapon,proto3,enum=fortniteservice.Weapon,oneof"`
}

func (*WorldItem_Material) isWorldItem_ItemData() {}

func (*WorldItem_Consumable) isWorldItem_ItemData() {}

func (*WorldItem_Ammo) isWorldItem_ItemData() {}

func (*WorldItem_Weapon) isWorldItem_ItemData() {}

type WorldWall struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint64          `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	X           int64           `protobuf:"varint,2,opt,name=x,proto3" json:"x,omitempty"`
	Y           int64           `protobuf:"varint,3,opt,name=y,proto3" json:"y,omitempty"`
	Health      uint32          `protobuf:"varint,4,opt,name=health,proto3" json:"health,omitempty"`
	Orientation WallOrientation `protobuf:"varint,5,opt,name=orientation,proto3,enum=fortniteservice.WallOrientation" json:"orientation,omitempty"`
	Material    Material        `protobuf:"varint,6,opt,name=material,proto3,enum=fortniteservice.Material" json:"material,omitempty"`
}

func (x *WorldWall) Reset() {
	*x = WorldWall{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_2dfortnite_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorldWall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorldWall) ProtoMessage() {}

func (x *WorldWall) ProtoReflect() protoreflect.Message {
	mi := &file_proto_2dfortnite_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorldWall.ProtoReflect.Descriptor instead.
func (*WorldWall) Descriptor() ([]byte, []int) {
	return file_proto_2dfortnite_proto_rawDescGZIP(), []int{14}
}

func (x *WorldWall) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *WorldWall) GetX() int64 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *WorldWall) GetY() int64 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *WorldWall) GetHealth() uint32 {
	if x != nil {
		return x.Health
	}
	return 0
}

func (x *WorldWall) GetOrientation() WallOrientation {
	if x != nil {
		return x.Orientation
	}
	return WallOrientation_VERTICAL
}

func (x *WorldWall) GetMaterial() Material {
	if x != nil {
		return x.Material
	}
	return Material_WOOD
}

type WorldStateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Player      *Player       `protobuf:"bytes,1,opt,name=player,proto3" json:"player,omitempty"`
	Items       []*WorldItem  `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	Walls       []*WorldWall  `protobuf:"bytes,3,rep,name=walls,proto3" json:"walls,omitempty"`
	Players     []*Player     `protobuf:"bytes,4,rep,name=players,proto3" json:"players,omitempty"`
	Projectiles []*Projectile `protobuf:"bytes,5,rep,name=projectiles,proto3" json:"projectiles,omitempty"`
}

func (x *WorldStateResponse) Reset() {
	*x = WorldStateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_2dfortnite_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorldStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorldStateResponse) ProtoMessage() {}

func (x *WorldStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_2dfortnite_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorldStateResponse.ProtoReflect.Descriptor instead.
func (*WorldStateResponse) Descriptor() ([]byte, []int) {
	return file_proto_2dfortnite_proto_rawDescGZIP(), []int{15}
}

func (x *WorldStateResponse) GetPlayer() *Player {
	if x != nil {
		return x.Player
	}
	return nil
}

func (x *WorldStateResponse) GetItems() []*WorldItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *WorldStateResponse) GetWalls() []*WorldWall {
	if x != nil {
		return x.Walls
	}
	return nil
}

func (x *WorldStateResponse) GetPlayers() []*Player {
	if x != nil {
		return x.Players
	}
	return nil
}

func (x *WorldStateResponse) GetProjectiles() []*Projectile {
	if x != nil {
		return x.Projectiles
	}
	return nil
}

type NetworkPosition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Everything to render an object between packets
	X  float64 `protobuf:"fixed64,1,opt,name=x,proto3" json:"x,omitempty"`
	Y  float64 `protobuf:"fixed64,2,opt,name=y,proto3" json:"y,omitempty"`
	VX float64 `protobuf:"fixed64,3,opt,name=vX,proto3" json:"vX,omitempty"`
	VY float64 `protobuf:"fixed64,4,opt,name=vY,proto3" json:"vY,omitempty"`
}

func (x *NetworkPosition) Reset() {
	*x = NetworkPosition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_2dfortnite_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkPosition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkPosition) ProtoMessage() {}

func (x *NetworkPosition) ProtoReflect() protoreflect.Message {
	mi := &file_proto_2dfortnite_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkPosition.ProtoReflect.Descriptor instead.
func (*NetworkPosition) Descriptor() ([]byte, []int) {
	return file_proto_2dfortnite_proto_rawDescGZIP(), []int{16}
}

func (x *NetworkPosition) GetX() float64 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *NetworkPosition) GetY() float64 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *NetworkPosition) GetVX() float64 {
	if x != nil {
		return x.VX
	}
	return 0
}

func (x *NetworkPosition) GetVY() float64 {
	if x != nil {
		return x.VY
	}
	return 0
}

type InventorySlot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item ItemType `protobuf:"varint,1,opt,name=item,proto3,enum=fortniteservice.ItemType" json:"item,omitempty"`
	// Types that are assignable to ItemData:
	//	*InventorySlot_Consumable
	//	*InventorySlot_Weapon
	ItemData  isInventorySlot_ItemData `protobuf_oneof:"item_data"`
	StackSize uint32                   `protobuf:"varint,4,opt,name=stack_size,json=stackSize,proto3" json:"stack_size,omitempty"` // number of ammo in mag if weapon
	Cooldown  uint32                   `protobuf:"varint,5,opt,name=cooldown,proto3" json:"cooldown,omitempty"`
	Reload    uint32                   `protobuf:"varint,6,opt,name=reload,proto3" json:"reload,omitempty"`
	Rarity    Rarity                   `protobuf:"varint,7,opt,name=rarity,proto3,enum=fortniteservice.Rarity" json:"rarity,omitempty"`
}

func (x *InventorySlot) Reset() {
	*x = InventorySlot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_2dfortnite_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InventorySlot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InventorySlot) ProtoMessage() {}

func (x *InventorySlot) ProtoReflect() protoreflect.Message {
	mi := &file_proto_2dfortnite_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InventorySlot.ProtoReflect.Descriptor instead.
func (*InventorySlot) Descriptor() ([]byte, []int) {
	return file_proto_2dfortnite_proto_rawDescGZIP(), []int{17}
}

func (x *InventorySlot) GetItem() ItemType {
	if x != nil {
		return x.Item
	}
	return ItemType_NONE
}

func (m *InventorySlot) GetItemData() isInventorySlot_ItemData {
	if m != nil {
		return m.ItemData
	}
	return nil
}

func (x *InventorySlot) GetConsumable() Consumable {
	if x, ok := x.GetItemData().(*InventorySlot_Consumable); ok {
		return x.Consumable
	}
	return Consumable_BANDAGES
}

func (x *InventorySlot) GetWeapon() Weapon {
	if x, ok := x.GetItemData().(*InventorySlot_Weapon); ok {
		return x.Weapon
	}
	return Weapon_PUMP_SHOTGUN
}

func (x *InventorySlot) GetStackSize() uint32 {
	if x != nil {
		return x.StackSize
	}
	return 0
}

func (x *InventorySlot) GetCooldown() uint32 {
	if x != nil {
		return x.Cooldown
	}
	return 0
}

func (x *InventorySlot) GetReload() uint32 {
	if x != nil {
		return x.Reload
	}
	return 0
}

func (x *InventorySlot) GetRarity() Rarity {
	if x != nil {
		return x.Rarity
	}
	return Rarity_COMMON
}

type isInventorySlot_ItemData interface {
	isInventorySlot_ItemData()
}

type InventorySlot_Consumable struct {
	Consumable Consumable `protobuf:"varint,2,opt,name=consumable,proto3,enum=fortniteservice.Consumable,oneof"`
}

type InventorySlot_Weapon struct {
	Weapon Weapon `protobuf:"varint,3,opt,name=weapon,proto3,enum=fortniteservice.Weapon,oneof"`
}

func (*InventorySlot_Consumable) isInventorySlot_ItemData() {}

func (*InventorySlot_Weapon) isInventorySlot_ItemData() {}

type ResourceStack struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item ItemType `protobuf:"varint,1,opt,name=item,proto3,enum=fortniteservice.ItemType" json:"item,omitempty"`
	// Types that are assignable to ItemData:
	//	*ResourceStack_Material
	//	*ResourceStack_Ammo
	ItemData  isResourceStack_ItemData `protobuf_oneof:"item_data"`
	StackSize uint32                   `protobuf:"varint,4,opt,name=stack_size,json=stackSize,proto3" json:"stack_size,omitempty"`
}

func (x *ResourceStack) Reset() {
	*x = ResourceStack{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_2dfortnite_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceStack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceStack) ProtoMessage() {}

func (x *ResourceStack) ProtoReflect() protoreflect.Message {
	mi := &file_proto_2dfortnite_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceStack.ProtoReflect.Descriptor instead.
func (*ResourceStack) Descriptor() ([]byte, []int) {
	return file_proto_2dfortnite_proto_rawDescGZIP(), []int{18}
}

func (x *ResourceStack) GetItem() ItemType {
	if x != nil {
		return x.Item
	}
	return ItemType_NONE
}

func (m *ResourceStack) GetItemData() isResourceStack_ItemData {
	if m != nil {
		return m.ItemData
	}
	return nil
}

func (x *ResourceStack) GetMaterial() Material {
	if x, ok := x.GetItemData().(*ResourceStack_Material); ok {
		return x.Material
	}
	return Material_WOOD
}

func (x *ResourceStack) GetAmmo() Ammo {
	if x, ok := x.GetItemData().(*ResourceStack_Ammo); ok {
		return x.Ammo
	}
	return Ammo_SHOTGUN_AMMO
}

func (x *ResourceStack) GetStackSize() uint32 {
	if x != nil {
		return x.StackSize
	}
	return 0
}

type isResourceStack_ItemData interface {
	isResourceStack_ItemData()
}

type ResourceStack_Material struct {
	Material Material `protobuf:"varint,2,opt,name=material,proto3,enum=fortniteservice.Material,oneof"`
}

type ResourceStack_Ammo struct {
	Ammo Ammo `protobuf:"varint,3,opt,name=ammo,proto3,enum=fortniteservice.Ammo,oneof"`
}

func (*ResourceStack_Material) isResourceStack_ItemData() {}

func (*ResourceStack_Ammo) isResourceStack_ItemData() {}

type Player struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           uint64           `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Skin         uint64           `protobuf:"varint,2,opt,name=skin,proto3" json:"skin,omitempty"`
	Name         string           `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	EquippedSlot int32            `protobuf:"varint,4,opt,name=equipped_slot,json=equippedSlot,proto3" json:"equipped_slot,omitempty"`
	Health       uint32           `protobuf:"varint,5,opt,name=health,proto3" json:"health,omitempty"`   // 0 for all players but the local player
	Shields      uint32           `protobuf:"varint,6,opt,name=shields,proto3" json:"shields,omitempty"` // 0 for all players but the local player
	Position     *NetworkPosition `protobuf:"bytes,7,opt,name=position,proto3" json:"position,omitempty"`
	Rotation     float64          `protobuf:"fixed64,8,opt,name=rotation,proto3" json:"rotation,omitempty"`
	Inventory    []*InventorySlot `protobuf:"bytes,9,rep,name=inventory,proto3" json:"inventory,omitempty"`
	Resources    []*ResourceStack `protobuf:"bytes,10,rep,name=resources,proto3" json:"resources,omitempty"`
}

func (x *Player) Reset() {
	*x = Player{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_2dfortnite_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Player) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Player) ProtoMessage() {}

func (x *Player) ProtoReflect() protoreflect.Message {
	mi := &file_proto_2dfortnite_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Player.ProtoReflect.Descriptor instead.
func (*Player) Descriptor() ([]byte, []int) {
	return file_proto_2dfortnite_proto_rawDescGZIP(), []int{19}
}

func (x *Player) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Player) GetSkin() uint64 {
	if x != nil {
		return x.Skin
	}
	return 0
}

func (x *Player) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Player) GetEquippedSlot() int32 {
	if x != nil {
		return x.EquippedSlot
	}
	return 0
}

func (x *Player) GetHealth() uint32 {
	if x != nil {
		return x.Health
	}
	return 0
}

func (x *Player) GetShields() uint32 {
	if x != nil {
		return x.Shields
	}
	return 0
}

func (x *Player) GetPosition() *NetworkPosition {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *Player) GetRotation() float64 {
	if x != nil {
		return x.Rotation
	}
	return 0
}

func (x *Player) GetInventory() []*InventorySlot {
	if x != nil {
		return x.Inventory
	}
	return nil
}

func (x *Player) GetResources() []*ResourceStack {
	if x != nil {
		return x.Resources
	}
	return nil
}

type Projectile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       uint64           `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Position *NetworkPosition `protobuf:"bytes,2,opt,name=position,proto3" json:"position,omitempty"`
	Damage   uint32           `protobuf:"varint,3,opt,name=damage,proto3" json:"damage,omitempty"`
	Life     uint32           `protobuf:"varint,4,opt,name=life,proto3" json:"life,omitempty"`
	Owner    uint64           `protobuf:"varint,5,opt,name=owner,proto3" json:"owner,omitempty"`
}

func (x *Projectile) Reset() {
	*x = Projectile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_2dfortnite_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Projectile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Projectile) ProtoMessage() {}

func (x *Projectile) ProtoReflect() protoreflect.Message {
	mi := &file_proto_2dfortnite_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Projectile.ProtoReflect.Descriptor instead.
func (*Projectile) Descriptor() ([]byte, []int) {
	return file_proto_2dfortnite_proto_rawDescGZIP(), []int{20}
}

func (x *Projectile) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Projectile) GetPosition() *NetworkPosition {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *Projectile) GetDamage() uint32 {
	if x != nil {
		return x.Damage
	}
	return 0
}

func (x *Projectile) GetLife() uint32 {
	if x != nil {
		return x.Life
	}
	return 0
}

func (x *Projectile) GetOwner() uint64 {
	if x != nil {
		return x.Owner
	}
	return 0
}

var File_proto_2dfortnite_proto protoreflect.FileDescriptor

var file_proto_2dfortnite_proto_rawDesc = []byte{
	0x0a, 0x16, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x32, 0x64, 0x66, 0x6f, 0x72, 0x74, 0x6e, 0x69,
	0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x66, 0x6f, 0x72, 0x74, 0x6e, 0x69,
	0x74, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2c, 0x0a, 0x11, 0x50, 0x69, 0x63, 0x6b, 0x75, 0x70,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x69,
	0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x69, 0x74,
	0x65, 0x6d, 0x49, 0x64, 0x22, 0x32, 0x0a, 0x0f, 0x44, 0x72, 0x6f, 0x70, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6c, 0x6f, 0x74, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x6c,
	0x6f, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x36, 0x0a, 0x13, 0x44, 0x72, 0x6f, 0x70,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x6c, 0x6f, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x22, 0x4b, 0x0a, 0x11, 0x4d, 0x6f, 0x76, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x76, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x02, 0x76, 0x78, 0x12, 0x0e, 0x0a, 0x02, 0x76, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x02, 0x76, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x66, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x22, 0x30, 0x0a,
	0x16, 0x53, 0x68, 0x6f, 0x6f, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x61, 0x63, 0x69, 0x6e,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x66, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x22,
	0x9f, 0x01, 0x0a, 0x10, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x57, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x01, 0x79,
	0x12, 0x38, 0x0a, 0x06, 0x66, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x20, 0x2e, 0x66, 0x6f, 0x72, 0x74, 0x6e, 0x69, 0x74, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x4f, 0x72, 0x69, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x06, 0x66, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x12, 0x35, 0x0a, 0x08, 0x6d, 0x61,
	0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x66,
	0x6f, 0x72, 0x74, 0x6e, 0x69, 0x74, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d,
	0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x52, 0x08, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x22, 0x10, 0x0a, 0x0e, 0x55, 0x73, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x55, 0x0a, 0x0f, 0x53, 0x77, 0x61, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x6c, 0x6f,
	0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x6c, 0x6f, 0x74, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73,
	0x6c, 0x6f, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x32, 0x22, 0x34, 0x0a, 0x11, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x6c, 0x6f, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x22, 0x92, 0x06, 0x0a, 0x0f, 0x44, 0x6f, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x66, 0x6f, 0x72, 0x74,
	0x6e, 0x69, 0x74, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x36, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x66, 0x6f, 0x72, 0x74, 0x6e, 0x69, 0x74, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64,
	0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x45, 0x0a, 0x0b, 0x70, 0x69,
	0x63, 0x6b, 0x75, 0x70, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x66, 0x6f, 0x72, 0x74, 0x6e, 0x69, 0x74, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x50, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x49, 0x74, 0x65,
	0x6d, 0x12, 0x3f, 0x0a, 0x09, 0x64, 0x72, 0x6f, 0x70, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x66, 0x6f, 0x72, 0x74, 0x6e, 0x69, 0x74, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x72, 0x6f, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x08, 0x64, 0x72, 0x6f, 0x70, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x4b, 0x0a, 0x0d, 0x64, 0x72, 0x6f, 0x70, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x66, 0x6f, 0x72, 0x74,
	0x6e, 0x69, 0x74, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x72, 0x6f, 0x70,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48,
	0x00, 0x52, 0x0c, 0x64, 0x72, 0x6f, 0x70, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12,
	0x45, 0x0a, 0x0b, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x66, 0x6f, 0x72, 0x74, 0x6e, 0x69, 0x74, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x6f, 0x76, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x6d, 0x6f, 0x76, 0x65,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x54, 0x0a, 0x10, 0x73, 0x68, 0x6f, 0x6f, 0x74, 0x5f,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x66, 0x6f, 0x72, 0x74, 0x6e, 0x69, 0x74, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x53, 0x68, 0x6f, 0x6f, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0f, 0x73, 0x68, 0x6f,
	0x6f, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6c, 0x65, 0x12, 0x42, 0x0a, 0x0a,
	0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x77, 0x61, 0x6c, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x66, 0x6f, 0x72, 0x74, 0x6e, 0x69, 0x74, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x57, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x09, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x57, 0x61, 0x6c, 0x6c,
	0x12, 0x3c, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x66, 0x6f, 0x72, 0x74, 0x6e, 0x69, 0x74, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x07, 0x75, 0x73, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x3f,
	0x0a, 0x09, 0x73, 0x77, 0x61, 0x70, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x66, 0x6f, 0x72, 0x74, 0x6e, 0x69, 0x74, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x53, 0x77, 0x61, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x08, 0x73, 0x77, 0x61, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x45, 0x0a, 0x0b, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x66, 0x6f, 0x72, 0x74, 0x6e, 0x69, 0x74, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x73, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x0d, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x22, 0x3f, 0x0a, 0x15, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6b, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x04, 0x73, 0x6b, 0x69, 0x6e, 0x22, 0x28, 0x0a, 0x16, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x1a, 0x0a, 0x08, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0xc5, 0x03, 0x0a,
	0x09, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x32, 0x0a, 0x03, 0x70, 0x6f,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x66, 0x6f, 0x72, 0x74, 0x6e, 0x69,
	0x74, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x70, 0x6f, 0x73, 0x12, 0x36,
	0x0a, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x19, 0x2e, 0x66, 0x6f, 0x72, 0x74, 0x6e, 0x69, 0x74, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x69, 0x74,
	0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x37, 0x0a, 0x08, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x66, 0x6f, 0x72, 0x74, 0x6e,
	0x69, 0x74, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x61, 0x74, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x08, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12,
	0x3d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x66, 0x6f, 0x72, 0x74, 0x6e, 0x69, 0x74, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x61, 0x62, 0x6c, 0x65,
	0x48, 0x00, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x2b,
	0x0a, 0x04, 0x61, 0x6d, 0x6d, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x66,
	0x6f, 0x72, 0x74, 0x6e, 0x69, 0x74, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41,
	0x6d, 0x6d, 0x6f, 0x48, 0x00, 0x52, 0x04, 0x61, 0x6d, 0x6d, 0x6f, 0x12, 0x31, 0x0a, 0x06, 0x77,
	0x65, 0x61, 0x70, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x66, 0x6f,
	0x72, 0x74, 0x6e, 0x69, 0x74, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x57, 0x65,
	0x61, 0x70, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x06, 0x77, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x12, 0x38,
	0x0a, 0x0b, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x72, 0x61, 0x72, 0x69, 0x74, 0x79, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x66, 0x6f, 0x72, 0x74, 0x6e, 0x69, 0x74, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x61, 0x72, 0x69, 0x74, 0x79, 0x52, 0x0a, 0x69, 0x74,
	0x65, 0x6d, 0x52, 0x61, 0x72, 0x69, 0x74, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x63,
	0x6b, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x74,
	0x61, 0x63, 0x6b, 0x53, 0x69, 0x7a, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x22, 0xca, 0x01, 0x0a, 0x09, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x57, 0x61,
	0x6c, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x01, 0x78,
	0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x01, 0x79, 0x12, 0x16,
	0x0a, 0x06, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x12, 0x42, 0x0a, 0x0b, 0x6f, 0x72, 0x69, 0x65, 0x6e, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x66, 0x6f,
	0x72, 0x74, 0x6e, 0x69, 0x74, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x57, 0x61,
	0x6c, 0x6c, 0x4f, 0x72, 0x69, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x6f,
	0x72, 0x69, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x35, 0x0a, 0x08, 0x6d, 0x61,
	0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x66,
	0x6f, 0x72, 0x74, 0x6e, 0x69, 0x74, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d,
	0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x52, 0x08, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x22, 0x9b, 0x02, 0x0a, 0x12, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x66, 0x6f, 0x72, 0x74, 0x6e,
	0x69, 0x74, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x66, 0x6f, 0x72, 0x74, 0x6e,
	0x69, 0x74, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x57, 0x6f, 0x72, 0x6c, 0x64,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x30, 0x0a, 0x05, 0x77,
	0x61, 0x6c, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x66, 0x6f, 0x72,
	0x74, 0x6e, 0x69, 0x74, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x57, 0x6f, 0x72,
	0x6c, 0x64, 0x57, 0x61, 0x6c, 0x6c, 0x52, 0x05, 0x77, 0x61, 0x6c, 0x6c, 0x73, 0x12, 0x31, 0x0a,
	0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x66, 0x6f, 0x72, 0x74, 0x6e, 0x69, 0x74, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73,
	0x12, 0x3d, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6c, 0x65, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x66, 0x6f, 0x72, 0x74, 0x6e, 0x69, 0x74, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69,
	0x6c, 0x65, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6c, 0x65, 0x73, 0x22,
	0x4d, 0x0a, 0x0f, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x78,
	0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x79, 0x12, 0x0e,
	0x0a, 0x02, 0x76, 0x58, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x02, 0x76, 0x58, 0x12, 0x0e,
	0x0a, 0x02, 0x76, 0x59, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x02, 0x76, 0x59, 0x22, 0xc1,
	0x02, 0x0a, 0x0d, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x6c, 0x6f, 0x74,
	0x12, 0x2d, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19,
	0x2e, 0x66, 0x6f, 0x72, 0x74, 0x6e, 0x69, 0x74, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x12,
	0x3d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x66, 0x6f, 0x72, 0x74, 0x6e, 0x69, 0x74, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x61, 0x62, 0x6c, 0x65,
	0x48, 0x00, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x31,
	0x0a, 0x06, 0x77, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17,
	0x2e, 0x66, 0x6f, 0x72, 0x74, 0x6e, 0x69, 0x74, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x06, 0x77, 0x65, 0x61, 0x70, 0x6f,
	0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x53, 0x69, 0x7a, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6f, 0x6c, 0x64, 0x6f, 0x77, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x63, 0x6f, 0x6f, 0x6c, 0x64, 0x6f, 0x77, 0x6e, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x65,
	0x6c, 0x6f, 0x61, 0x64, 0x12, 0x2f, 0x0a, 0x06, 0x72, 0x61, 0x72, 0x69, 0x74, 0x79, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x66, 0x6f, 0x72, 0x74, 0x6e, 0x69, 0x74, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x61, 0x72, 0x69, 0x74, 0x79, 0x52, 0x06, 0x72,
	0x61, 0x72, 0x69, 0x74, 0x79, 0x42, 0x0b, 0x0a, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x22, 0xd0, 0x01, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53,
	0x74, 0x61, 0x63, 0x6b, 0x12, 0x2d, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x19, 0x2e, 0x66, 0x6f, 0x72, 0x74, 0x6e, 0x69, 0x74, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x69,
	0x74, 0x65, 0x6d, 0x12, 0x37, 0x0a, 0x08, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x66, 0x6f, 0x72, 0x74, 0x6e, 0x69, 0x74, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x48, 0x00, 0x52, 0x08, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x2b, 0x0a, 0x04,
	0x61, 0x6d, 0x6d, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x66, 0x6f, 0x72,
	0x74, 0x6e, 0x69, 0x74, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x6d, 0x6d,
	0x6f, 0x48, 0x00, 0x52, 0x04, 0x61, 0x6d, 0x6d, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61,
	0x63, 0x6b, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73,
	0x74, 0x61, 0x63, 0x6b, 0x53, 0x69, 0x7a, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x69, 0x74, 0x65, 0x6d,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x22, 0xed, 0x02, 0x0a, 0x06, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x6b, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04,
	0x73, 0x6b, 0x69, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x71, 0x75, 0x69,
	0x70, 0x70, 0x65, 0x64, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0c, 0x65, 0x71, 0x75, 0x69, 0x70, 0x70, 0x65, 0x64, 0x53, 0x6c, 0x6f, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x68,
	0x65, 0x61, 0x6c, 0x74, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x68, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x68, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12,
	0x3c, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x66, 0x6f, 0x72, 0x74, 0x6e, 0x69, 0x74, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x50, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a,
	0x08, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x08, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x09, 0x69, 0x6e, 0x76,
	0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x66,
	0x6f, 0x72, 0x74, 0x6e, 0x69, 0x74, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49,
	0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x09, 0x69, 0x6e,
	0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x3c, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x66, 0x6f, 0x72,
	0x74, 0x6e, 0x69, 0x74, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x52, 0x09, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x22, 0x9c, 0x01, 0x0a, 0x0a, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x69, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x3c, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x66, 0x6f, 0x72, 0x74, 0x6e, 0x69, 0x74,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69,
	0x66, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x6c, 0x69, 0x66, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6f,
	0x77, 0x6e, 0x65, 0x72, 0x2a, 0xa4, 0x01, 0x0a, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x50, 0x49, 0x43, 0x4b, 0x55, 0x50, 0x5f, 0x49, 0x54,
	0x45, 0x4d, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x44, 0x52, 0x4f, 0x50, 0x5f, 0x49, 0x54, 0x45,
	0x4d, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x44, 0x52, 0x4f, 0x50, 0x5f, 0x52, 0x45, 0x53, 0x4f,
	0x55, 0x52, 0x43, 0x45, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x4d, 0x4f, 0x56, 0x45, 0x5f, 0x50,
	0x4c, 0x41, 0x59, 0x45, 0x52, 0x10, 0x03, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x48, 0x4f, 0x4f, 0x54,
	0x5f, 0x50, 0x52, 0x4f, 0x4a, 0x45, 0x43, 0x54, 0x49, 0x4c, 0x45, 0x10, 0x04, 0x12, 0x0e, 0x0a,
	0x0a, 0x42, 0x55, 0x49, 0x4c, 0x44, 0x5f, 0x57, 0x41, 0x4c, 0x4c, 0x10, 0x05, 0x12, 0x0c, 0x0a,
	0x08, 0x55, 0x53, 0x45, 0x5f, 0x49, 0x54, 0x45, 0x4d, 0x10, 0x06, 0x12, 0x0d, 0x0a, 0x09, 0x53,
	0x57, 0x41, 0x50, 0x5f, 0x49, 0x54, 0x45, 0x4d, 0x10, 0x07, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x45,
	0x4c, 0x45, 0x43, 0x54, 0x5f, 0x49, 0x54, 0x45, 0x4d, 0x10, 0x08, 0x2a, 0x48, 0x0a, 0x08, 0x49,
	0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10,
	0x00, 0x12, 0x0c, 0x0a, 0x08, 0x4d, 0x41, 0x54, 0x45, 0x52, 0x49, 0x41, 0x4c, 0x10, 0x01, 0x12,
	0x0e, 0x0a, 0x0a, 0x43, 0x4f, 0x4e, 0x53, 0x55, 0x4d, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x02, 0x12,
	0x08, 0x0a, 0x04, 0x41, 0x4d, 0x4d, 0x4f, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x57, 0x45, 0x41,
	0x50, 0x4f, 0x4e, 0x10, 0x04, 0x2a, 0x2a, 0x0a, 0x08, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x12, 0x08, 0x0a, 0x04, 0x57, 0x4f, 0x4f, 0x44, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x42,
	0x52, 0x49, 0x43, 0x4b, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x4d, 0x45, 0x54, 0x41, 0x4c, 0x10,
	0x02, 0x2a, 0x66, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x61, 0x62, 0x6c, 0x65, 0x12,
	0x0c, 0x0a, 0x08, 0x42, 0x41, 0x4e, 0x44, 0x41, 0x47, 0x45, 0x53, 0x10, 0x00, 0x12, 0x0a, 0x0a,
	0x06, 0x4d, 0x45, 0x44, 0x4b, 0x49, 0x54, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x53, 0x4d, 0x41,
	0x4c, 0x4c, 0x5f, 0x53, 0x48, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x50, 0x4f, 0x54, 0x49, 0x4f, 0x4e,
	0x10, 0x02, 0x12, 0x17, 0x0a, 0x13, 0x4c, 0x41, 0x52, 0x47, 0x45, 0x5f, 0x53, 0x48, 0x49, 0x45,
	0x4c, 0x44, 0x5f, 0x50, 0x4f, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x43,
	0x48, 0x55, 0x47, 0x5f, 0x4a, 0x55, 0x47, 0x10, 0x04, 0x2a, 0x41, 0x0a, 0x04, 0x41, 0x6d, 0x6d,
	0x6f, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x48, 0x4f, 0x54, 0x47, 0x55, 0x4e, 0x5f, 0x41, 0x4d, 0x4d,
	0x4f, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x41, 0x53, 0x53, 0x41, 0x55, 0x4c, 0x54, 0x5f, 0x52,
	0x49, 0x46, 0x4c, 0x45, 0x5f, 0x41, 0x4d, 0x4d, 0x4f, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x50,
	0x49, 0x53, 0x54, 0x4f, 0x4c, 0x5f, 0x41, 0x4d, 0x4d, 0x4f, 0x10, 0x03, 0x2a, 0x42, 0x0a, 0x06,
	0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x0c, 0x50, 0x55, 0x4d, 0x50, 0x5f, 0x53,
	0x48, 0x4f, 0x54, 0x47, 0x55, 0x4e, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x41, 0x53, 0x53, 0x41,
	0x55, 0x4c, 0x54, 0x5f, 0x52, 0x49, 0x46, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x53,
	0x4d, 0x47, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x50, 0x49, 0x53, 0x54, 0x4f, 0x4c, 0x10, 0x03,
	0x2a, 0x45, 0x0a, 0x06, 0x52, 0x61, 0x72, 0x69, 0x74, 0x79, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x4f,
	0x4d, 0x4d, 0x4f, 0x4e, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x55, 0x4e, 0x43, 0x4f, 0x4d, 0x4d,
	0x4f, 0x4e, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x52, 0x41, 0x52, 0x45, 0x10, 0x02, 0x12, 0x08,
	0x0a, 0x04, 0x45, 0x50, 0x49, 0x43, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x4c, 0x45, 0x47, 0x45,
	0x4e, 0x44, 0x41, 0x52, 0x59, 0x10, 0x04, 0x2a, 0x2f, 0x0a, 0x0f, 0x57, 0x61, 0x6c, 0x6c, 0x4f,
	0x72, 0x69, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0c, 0x0a, 0x08, 0x56, 0x45,
	0x52, 0x54, 0x49, 0x43, 0x41, 0x4c, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x48, 0x4f, 0x52, 0x49,
	0x5a, 0x4f, 0x4e, 0x54, 0x41, 0x4c, 0x10, 0x01, 0x32, 0x8a, 0x02, 0x0a, 0x0f, 0x46, 0x6f, 0x72,
	0x74, 0x6e, 0x69, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x61, 0x0a, 0x0e,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x26,
	0x2e, 0x66, 0x6f, 0x72, 0x74, 0x6e, 0x69, 0x74, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x66, 0x6f, 0x72, 0x74, 0x6e, 0x69, 0x74,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4e, 0x0a, 0x0a, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x19, 0x2e,
	0x66, 0x6f, 0x72, 0x74, 0x6e, 0x69, 0x74, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x1a, 0x23, 0x2e, 0x66, 0x6f, 0x72, 0x74, 0x6e,
	0x69, 0x74, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x57, 0x6f, 0x72, 0x6c, 0x64,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x12,
	0x44, 0x0a, 0x08, 0x44, 0x6f, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x2e, 0x66, 0x6f,
	0x72, 0x74, 0x6e, 0x69, 0x74, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x6f,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x21, 0x5a, 0x1f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x32,
	0x64, 0x66, 0x6f, 0x72, 0x74, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x3b,
	0x66, 0x6f, 0x72, 0x74, 0x6e, 0x69, 0x74, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_2dfortnite_proto_rawDescOnce sync.Once
	file_proto_2dfortnite_proto_rawDescData = file_proto_2dfortnite_proto_rawDesc
)

func file_proto_2dfortnite_proto_rawDescGZIP() []byte {
	file_proto_2dfortnite_proto_rawDescOnce.Do(func() {
		file_proto_2dfortnite_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_2dfortnite_proto_rawDescData)
	})
	return file_proto_2dfortnite_proto_rawDescData
}

var file_proto_2dfortnite_proto_enumTypes = make([]protoimpl.EnumInfo, 8)
var file_proto_2dfortnite_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_proto_2dfortnite_proto_goTypes = []interface{}{
	(ActionType)(0),                // 0: fortniteservice.ActionType
	(ItemType)(0),                  // 1: fortniteservice.ItemType
	(Material)(0),                  // 2: fortniteservice.Material
	(Consumable)(0),                // 3: fortniteservice.Consumable
	(Ammo)(0),                      // 4: fortniteservice.Ammo
	(Weapon)(0),                    // 5: fortniteservice.Weapon
	(Rarity)(0),                    // 6: fortniteservice.Rarity
	(WallOrientation)(0),           // 7: fortniteservice.WallOrientation
	(*PickupItemRequest)(nil),      // 8: fortniteservice.PickupItemRequest
	(*DropItemRequest)(nil),        // 9: fortniteservice.DropItemRequest
	(*DropResourceRequest)(nil),    // 10: fortniteservice.DropResourceRequest
	(*MovePlayerRequest)(nil),      // 11: fortniteservice.MovePlayerRequest
	(*ShootProjectileRequest)(nil), // 12: fortniteservice.ShootProjectileRequest
	(*BuildWallRequest)(nil),       // 13: fortniteservice.BuildWallRequest
	(*UseItemRequest)(nil),         // 14: fortniteservice.UseItemRequest
	(*SwapItemRequest)(nil),        // 15: fortniteservice.SwapItemRequest
	(*SelectItemRequest)(nil),      // 16: fortniteservice.SelectItemRequest
	(*DoActionRequest)(nil),        // 17: fortniteservice.DoActionRequest
	(*RegisterPlayerRequest)(nil),  // 18: fortniteservice.RegisterPlayerRequest
	(*RegisterPlayerResponse)(nil), // 19: fortniteservice.RegisterPlayerResponse
	(*PlayerId)(nil),               // 20: fortniteservice.PlayerId
	(*WorldItem)(nil),              // 21: fortniteservice.WorldItem
	(*WorldWall)(nil),              // 22: fortniteservice.WorldWall
	(*WorldStateResponse)(nil),     // 23: fortniteservice.WorldStateResponse
	(*NetworkPosition)(nil),        // 24: fortniteservice.NetworkPosition
	(*InventorySlot)(nil),          // 25: fortniteservice.InventorySlot
	(*ResourceStack)(nil),          // 26: fortniteservice.ResourceStack
	(*Player)(nil),                 // 27: fortniteservice.Player
	(*Projectile)(nil),             // 28: fortniteservice.Projectile
	(*empty.Empty)(nil),            // 29: google.protobuf.Empty
}
var file_proto_2dfortnite_proto_depIdxs = []int32{
	7,  // 0: fortniteservice.BuildWallRequest.facing:type_name -> fortniteservice.WallOrientation
	2,  // 1: fortniteservice.BuildWallRequest.material:type_name -> fortniteservice.Material
	0,  // 2: fortniteservice.DoActionRequest.action_type:type_name -> fortniteservice.ActionType
	20, // 3: fortniteservice.DoActionRequest.player_id:type_name -> fortniteservice.PlayerId
	8,  // 4: fortniteservice.DoActionRequest.pickup_item:type_name -> fortniteservice.PickupItemRequest
	9,  // 5: fortniteservice.DoActionRequest.drop_item:type_name -> fortniteservice.DropItemRequest
	10, // 6: fortniteservice.DoActionRequest.drop_resource:type_name -> fortniteservice.DropResourceRequest
	11, // 7: fortniteservice.DoActionRequest.move_player:type_name -> fortniteservice.MovePlayerRequest
	12, // 8: fortniteservice.DoActionRequest.shoot_projectile:type_name -> fortniteservice.ShootProjectileRequest
	13, // 9: fortniteservice.DoActionRequest.build_wall:type_name -> fortniteservice.BuildWallRequest
	14, // 10: fortniteservice.DoActionRequest.use_item:type_name -> fortniteservice.UseItemRequest
	15, // 11: fortniteservice.DoActionRequest.swap_item:type_name -> fortniteservice.SwapItemRequest
	16, // 12: fortniteservice.DoActionRequest.select_item:type_name -> fortniteservice.SelectItemRequest
	24, // 13: fortniteservice.WorldItem.pos:type_name -> fortniteservice.NetworkPosition
	1,  // 14: fortniteservice.WorldItem.item_type:type_name -> fortniteservice.ItemType
	2,  // 15: fortniteservice.WorldItem.material:type_name -> fortniteservice.Material
	3,  // 16: fortniteservice.WorldItem.consumable:type_name -> fortniteservice.Consumable
	4,  // 17: fortniteservice.WorldItem.ammo:type_name -> fortniteservice.Ammo
	5,  // 18: fortniteservice.WorldItem.weapon:type_name -> fortniteservice.Weapon
	6,  // 19: fortniteservice.WorldItem.item_rarity:type_name -> fortniteservice.Rarity
	7,  // 20: fortniteservice.WorldWall.orientation:type_name -> fortniteservice.WallOrientation
	2,  // 21: fortniteservice.WorldWall.material:type_name -> fortniteservice.Material
	27, // 22: fortniteservice.WorldStateResponse.player:type_name -> fortniteservice.Player
	21, // 23: fortniteservice.WorldStateResponse.items:type_name -> fortniteservice.WorldItem
	22, // 24: fortniteservice.WorldStateResponse.walls:type_name -> fortniteservice.WorldWall
	27, // 25: fortniteservice.WorldStateResponse.players:type_name -> fortniteservice.Player
	28, // 26: fortniteservice.WorldStateResponse.projectiles:type_name -> fortniteservice.Projectile
	1,  // 27: fortniteservice.InventorySlot.item:type_name -> fortniteservice.ItemType
	3,  // 28: fortniteservice.InventorySlot.consumable:type_name -> fortniteservice.Consumable
	5,  // 29: fortniteservice.InventorySlot.weapon:type_name -> fortniteservice.Weapon
	6,  // 30: fortniteservice.InventorySlot.rarity:type_name -> fortniteservice.Rarity
	1,  // 31: fortniteservice.ResourceStack.item:type_name -> fortniteservice.ItemType
	2,  // 32: fortniteservice.ResourceStack.material:type_name -> fortniteservice.Material
	4,  // 33: fortniteservice.ResourceStack.ammo:type_name -> fortniteservice.Ammo
	24, // 34: fortniteservice.Player.position:type_name -> fortniteservice.NetworkPosition
	25, // 35: fortniteservice.Player.inventory:type_name -> fortniteservice.InventorySlot
	26, // 36: fortniteservice.Player.resources:type_name -> fortniteservice.ResourceStack
	24, // 37: fortniteservice.Projectile.position:type_name -> fortniteservice.NetworkPosition
	18, // 38: fortniteservice.FortniteService.RegisterPlayer:input_type -> fortniteservice.RegisterPlayerRequest
	20, // 39: fortniteservice.FortniteService.WorldState:input_type -> fortniteservice.PlayerId
	17, // 40: fortniteservice.FortniteService.DoAction:input_type -> fortniteservice.DoActionRequest
	19, // 41: fortniteservice.FortniteService.RegisterPlayer:output_type -> fortniteservice.RegisterPlayerResponse
	23, // 42: fortniteservice.FortniteService.WorldState:output_type -> fortniteservice.WorldStateResponse
	29, // 43: fortniteservice.FortniteService.DoAction:output_type -> google.protobuf.Empty
	41, // [41:44] is the sub-list for method output_type
	38, // [38:41] is the sub-list for method input_type
	38, // [38:38] is the sub-list for extension type_name
	38, // [38:38] is the sub-list for extension extendee
	0,  // [0:38] is the sub-list for field type_name
}

func init() { file_proto_2dfortnite_proto_init() }
func file_proto_2dfortnite_proto_init() {
	if File_proto_2dfortnite_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_2dfortnite_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PickupItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_2dfortnite_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DropItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_2dfortnite_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DropResourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_2dfortnite_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MovePlayerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_2dfortnite_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShootProjectileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_2dfortnite_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuildWallRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_2dfortnite_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UseItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_2dfortnite_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SwapItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_2dfortnite_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SelectItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_2dfortnite_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DoActionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_2dfortnite_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterPlayerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_2dfortnite_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterPlayerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_2dfortnite_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_2dfortnite_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorldItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_2dfortnite_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorldWall); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_2dfortnite_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorldStateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_2dfortnite_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetworkPosition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_2dfortnite_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InventorySlot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_2dfortnite_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceStack); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_2dfortnite_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Player); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_2dfortnite_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Projectile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_2dfortnite_proto_msgTypes[9].OneofWrappers = []interface{}{
		(*DoActionRequest_PickupItem)(nil),
		(*DoActionRequest_DropItem)(nil),
		(*DoActionRequest_DropResource)(nil),
		(*DoActionRequest_MovePlayer)(nil),
		(*DoActionRequest_ShootProjectile)(nil),
		(*DoActionRequest_BuildWall)(nil),
		(*DoActionRequest_UseItem)(nil),
		(*DoActionRequest_SwapItem)(nil),
		(*DoActionRequest_SelectItem)(nil),
	}
	file_proto_2dfortnite_proto_msgTypes[13].OneofWrappers = []interface{}{
		(*WorldItem_Material)(nil),
		(*WorldItem_Consumable)(nil),
		(*WorldItem_Ammo)(nil),
		(*WorldItem_Weapon)(nil),
	}
	file_proto_2dfortnite_proto_msgTypes[17].OneofWrappers = []interface{}{
		(*InventorySlot_Consumable)(nil),
		(*InventorySlot_Weapon)(nil),
	}
	file_proto_2dfortnite_proto_msgTypes[18].OneofWrappers = []interface{}{
		(*ResourceStack_Material)(nil),
		(*ResourceStack_Ammo)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_2dfortnite_proto_rawDesc,
			NumEnums:      8,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_2dfortnite_proto_goTypes,
		DependencyIndexes: file_proto_2dfortnite_proto_depIdxs,
		EnumInfos:         file_proto_2dfortnite_proto_enumTypes,
		MessageInfos:      file_proto_2dfortnite_proto_msgTypes,
	}.Build()
	File_proto_2dfortnite_proto = out.File
	file_proto_2dfortnite_proto_rawDesc = nil
	file_proto_2dfortnite_proto_goTypes = nil
	file_proto_2dfortnite_proto_depIdxs = nil
}
